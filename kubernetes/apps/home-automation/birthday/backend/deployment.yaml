apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: home-automation
  name: birthday-backend
  labels:
    app: birthday-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: birthday-backend
  template:
    metadata:
      labels:
        app: birthday-backend
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:8
          command:
            - "sh"
            - "-c"
            - |
              echo "Creating database and user..."
              mysql -h $INIT_MYSQL_HOST -u root -P ${INIT_MYSQL_PORT:-3306} -p$INIT_MYSQL_SUPER_PASSWORD -e "
              CREATE DATABASE IF NOT EXISTS $INIT_MYSQL_DBNAME;
              CREATE USER IF NOT EXISTS '$INIT_MYSQL_USER'@'%' IDENTIFIED BY '$INIT_MYSQL_PASSWORD';
              GRANT ALL PRIVILEGES ON $INIT_MYSQL_DBNAME.* TO '$INIT_MYSQL_USER'@'%';
              FLUSH PRIVILEGES;"
          env:
          - name: INIT_MYSQL_SUPER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_SUPER_PASSWORD
          - name: INIT_MYSQL_DBNAME
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_DBNAME
          - name: INIT_MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_USER
          - name: INIT_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_PASSWORD
          - name: INIT_MYSQL_HOST
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_HOST
          - name: INIT_MYSQL_PORT
            valueFrom:
              secretKeyRef:
                name: birthday-backend
                key: INIT_MYSQL_PORT

      containers:
      - name: birthday-backend
        readinessProbe:
          httpGet:
            path: /
            port: 10040
        livenessProbe:
          httpGet:
            path: /
            port: 10040
        # volumeMounts:
        # - mountPath: /data
        #   subPath: birthday-backend
        #   name: data
        image: ghcr.io/bokker/birthday-backend:1.0.11 # {"$imagepolicy": "home-automation:birthday-backend"}
        # envFrom:
        # - configMapRef:
        #     name: birthday-backend
        imagePullPolicy: Always
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: regcred
      # volumes:
      #   - name: data
      #     persistentVolumeClaim:
      #       claimName: unraid-un-nvme-pvc
